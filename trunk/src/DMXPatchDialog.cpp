/***************************************************************************
 *  LightShow - control software for DMX512 lighting fixtures
 *
 *  Copyright (C) 2005  Thorsten Baumhoefer
 *  totob(at)totosoft.de
 *
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 ***************************************************************************/

// -*- C++ -*- generated by wxGlade 0.3.3 on Fri Sep  3 20:20:11 2004

#include "DMXPatchDialog.h"


DMXPatchDialog::DMXPatchDialog(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxTHICK_FRAME)
{
    dmx_patch_grid = new mywxGrid(this, -1);
    button_close = new wxButton(this, wxID_CLOSE, wxT("&Close"));

    set_properties();
    do_layout();
	dmx_patch_grid->set_list(&storage::list_patchitem);
}


void DMXPatchDialog::set_properties()
{
    SetTitle(wxT("DMX Patch"));
    SetSize(wxSize(600, 559));
}


void DMXPatchDialog::do_layout()
{
    wxBoxSizer* sizer_2 = new wxBoxSizer(wxVERTICAL);
    sizer_2->Add(dmx_patch_grid, 1, wxEXPAND, 0);
    sizer_2->Add(button_close, 0, wxALIGN_RIGHT, 0);
    SetAutoLayout(true);
    SetSizer(sizer_2);
    Layout();
}

BEGIN_EVENT_TABLE(DMXPatchDialog, wxDialog)
	EVT_BUTTON(wxID_CLOSE, DMXPatchDialog::OnClose)
END_EVENT_TABLE()

void DMXPatchDialog::OnClose(wxCommandEvent& event)
{
	Close();
}
